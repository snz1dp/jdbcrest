
###########################################################################################
# WEB服务配置
###########################################################################################
# 服务端口，开发请确保不要与其他服务端口冲突
server.port=${WEB_SERVER_PORT:7188}
# 服务上下文根
server.context-path=${WEB_CONTEXT_PATH:/jdbc/rest/api}
# 服务对外上下文根或URL
server.publish.url=${WEB_PUBLISH_URL:${server.context-path}}
# 注销后默认跳转地址
server.logout-success.url=${LOGOUT_SUCCESS_URL:${server.publish.url}/swagger-ui/index.html}
# 应用名称
spring.application.name=${APP_CODE:jdbcrest}
# 缺省跳转地址
app.default_url=${DEFAULT_URL:${server.publish.url}/swagger-ui/index.html}

###########################################################################################
# 监控检查配置项
###########################################################################################
# 不检查邮件
management.health.mail.enabled=false
# 不检查JMS
management.health.jms.enabled=false
# 取消默认的安全管理
management.security.enabled=false

###########################################################################################
# 数据库配置
###########################################################################################
# 是否启用数据库结构创建
spring.datascheme.enabled=${DATASCHEME_ENABLED:false}
# 数据结构创建标识
spring.datascheme.name=${spring.application.name}
# 数据库SQL源地址
spring.datascheme.url=${DATASCHEME_URL:classpath:sql/schemas}
# 数据源连接池类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# jdbc驱动类名
spring.datasource.driver-class-name=${JDBC_DRIVER:org.postgresql.Driver}
# jdbc连接URL
spring.datasource.url=${JDBC_URL:jdbc:postgresql://localhost:5432/demo}
# jdbc用户名
spring.datasource.username=${JDBC_USER:postgres}
# jdbc密码
spring.datasource.password=${JDBC_PASSWORD:snz1dp9527}
# jdbc管理员用户名
spring.datasource.admin.username=${JDBC_ADMIN_USER:${spring.datasource.username}}
# jdbc管理员用户密码
spring.datasource.admin.password=${JDBC_ADMIN_PASSWORD:${spring.datasource.password}}
# 数据库名称
spring.datasource.create.database=${DATABASE_NAME:}

###########################################################################################
# 缓存类型none、redis、ehcache
###########################################################################################
spring.cache.type=${CACHE_TYPE:none}
# Redis缓存库索引
spring.redis.database=${REDIS_DB:3}
# Redis超时时间
spring.redis.timeout=${REDIS_TIMEOUT:3000}
# Redis连接密码
spring.redis.password=${REDIS_PASSWORD:}

###########################################################################################
# 应用配置信息
###########################################################################################
# 应用代码
app.code=${spring.application.name}
# 使用应用统一配置服务
app.config.type=${CONFIG_TYPE:none}
# 统一配置服务访问地址
app.config.server-url=${CONFSERV_URL:http://localhost:8081/appconfig}
# 单点登录服务URL
app.xeai.url=${XEAI_URL:http://localhost:8585/xeai}
# 数据表权限配置文件
app.table.definition=${TABLE_DEFINITION:}
# 接口权限配置文件
spring.security.authorize=${SERVICE_AUTHORIZE:}
# 是否启用权限定义
app.predefined.enabled=${PERMISSION_ENABLED:false}
# 权限定义配置文件
app.predefined.file=${PERMISSION_DEFINITION:}
# SQL位置
app.sql.location=${SQL_LOCATION:}
# JDBC REST缓存类型
app.jdbcrest.cache.type=${spring.cache.type}

###########################################################################################
# 单点登录配置
###########################################################################################
# 通过网关进行安装管理
spring.security.ssoheader=${SSO_ENABLED:false}
# 限制默认组织域
spring.security.limit-scope=${SSO_SCOPE:}
# 当前应用身份
spring.security.remote-user.appid=${app.code}
# 设置请求头ID类型
spring.security.remote-user.idtype=uname
# 是否启用单点登录请求头模拟
spring.security.ssoheader.simulate=${SSO_SIMULATE:false}
# 默认的测试用户
spring.security.ssoheader.test-user=${TEST_USER:root}

###########################################################################################
# 设置日志级
###########################################################################################
logging.level.root=${ROOT_LOG_LEVEL:INFO}
logging.level.com.snz1.jdbc.rest=${APP_LOG_LEVEL:DEBUG}
logging.level.com.alibaba.druid=${JDBC_LOG_LEVEL:DEBUG}
logging.level.org.springframework.jdbc=${JDBC_LOG_LEVEL:DEBUG}
logging.level.org.postgresql.jdbc=${JDBC_LOG_LEVEL:DEBUG}
